!function(e){var t={};function a(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,a),o.l=!0,o.exports}a.m=e,a.c=t,a.d=function(e,t,n){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(a.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)a.d(n,o,function(t){return e[t]}.bind(null,o));return n},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="/bundles/cogitags/",a(a.s="AkAK")}({"9OBQ":function(e,t){e.exports='{% block cogi_tags_detail %}\r\n    <sw-page class="cogi-tags-detail">\r\n        <template slot="smart-bar-actions">\r\n            <sw-button :routerLink="{ name: \'cogi.tags.list\' }">\r\n                {{ $t(\'cogi-tags.detail.cancelButtonText\') }}\r\n            </sw-button>\r\n\r\n            <sw-button-process\r\n                :isLoading="isLoading"\r\n                :processSuccess="processSuccess"\r\n                variant="primary"\r\n                @process-finish="saveFinish"\r\n                @click="onClickSave">\r\n                {{ $t(\'cogi-tags.detail.saveButtonText\') }}\r\n            </sw-button-process>\r\n        </template>\r\n\r\n        <template slot="content">\r\n            <sw-card-view>\r\n                <sw-card v-if="tag" :isLoading="isLoading">\r\n                    <sw-field :label="$t(\'cogi-tags.detail.nameLabel\')" v-model="tag.name"></sw-field>\r\n                </sw-card>\r\n            </sw-card-view>\r\n        </template>\r\n    </sw-page>\r\n{% endblock %}\r\n'},AkAK:function(e,t,a){"use strict";a.r(t);var n=a("BxKO"),o=a.n(n),i=Shopware,r=i.Component,s=i.Mixin,l=Shopware.Data.Criteria;r.register("cogi-tags-list",{template:o.a,inject:["repositoryFactory"],mixins:[s.getByName("notification")],data:function(){return{showTagDeleteModal:!1,showTagAddModal:!1,toDeleteTagId:null,newTag:"",tags:null}},metaInfo:function(){return{title:this.$createTitle()}},computed:{tagRepository:function(){return this.repositoryFactory.create("tag")},columns:function(){return[{property:"name",dataIndex:"name",label:this.$t("cogi-tags.list.labelName"),routerLink:"cogi.tags.detail",inlineEdit:"string",allowResize:!0,primary:!0},{property:"id",dataIndex:"id",routerLink:"cogi.tags.detail",label:this.$tc("cogi-tags.list.id"),allowResize:!0},{property:"createdAt",dataIndex:"createdAt",label:this.$tc("cogi-tags.list.labelCreatedAt"),allowResize:!0}]}},created:function(){this.createdComponent()},methods:{createdComponent:function(){this.getList()},getList:function(){var e=this;this.tagRepository.search(new l,Shopware.Context.api).then((function(t){e.tags=t}))},onStartTagDelete:function(e){this.toDeleteTagId=e.id,this.onShowTagDeleteModal()},onConfirmTagDelete:function(){var e=this;this.onCloseTagDeleteModal(),this.tagRepository.delete(this.toDeleteTagId,Shopware.Context.api).then((function(){e.createNotificationSuccess({title:e.$tc("global.default.success"),message:e.$tc("cogi-tags.list.messageDeleteSuccess")}),e.tagRepository.search(new l,Shopware.Context.api).then((function(t){e.tags=t}))})).catch((function(t){e.createNotificationError({title:e.$tc("global.default.error"),message:e.$tc("cogi-tags.list.messageDeleteError")})}))},onSaveNewTag:function(){var e=this,t=new l;t.addFilter(l.equals("name",this.newTag)),this.tagRepository.search(t,Shopware.Context.api).then((function(t){if(t.total>0)e.createNotificationError({title:e.$tc("global.default.error"),message:e.$tc("cogi-tags.list.messageAlreadyExistsError")});else{var a=e.tagRepository.create(Shopware.Context.api);a.name=e.newTag,e.tagRepository.save(a,Shopware.Context.api).then((function(){e.getList(),e.onCloseTagAddModal(),e.createNotificationSuccess({title:e.$tc("global.default.success"),message:e.$tc("cogi-tags.list.messageAddedSuccess")})})).catch((function(){e.createNotificationError({title:e.$tc("global.default.error"),message:e.$tc("global.default.error")})}))}}))},onExportToCSV:function(){var e=[];this.tags.forEach((function(t){e.push(t)}));var t="data:text/csv;charset=utf-8,",a=["ID","Name","Creation"].join(",");t+=a+"\r\n",e.forEach((function(e){var a=[e.id,e.name,e.createdAt].join(",");t+=a+"\r\n"}));var n=encodeURI(t),o=document.createElement("a");o.setAttribute("href",n),o.setAttribute("download","tags.csv"),document.body.appendChild(o),o.click()},onShowTagAddModal:function(){this.showTagAddModal=!0},onCloseTagAddModal:function(){this.showTagAddModal=!1,this.newTag=""},onCancelTagDelete:function(){this.toDeleteTagId=null,this.onCloseTagDeleteModal()},onShowTagDeleteModal:function(){this.showTagDeleteModal=!0},onCloseTagDeleteModal:function(){this.showTagDeleteModal=!1}}});var c=a("9OBQ"),d=a.n(c),g=Shopware,u=g.Component,m=g.Mixin;u.register("cogi-tags-detail",{template:d.a,inject:["repositoryFactory"],mixins:[m.getByName("notification")],metaInfo:function(){return{title:this.$createTitle()}},data:function(){return{tag:null,isLoading:!1,processSuccess:!1,repository:null}},created:function(){this.repository=this.repositoryFactory.create("tag"),this.getTag()},methods:{getTag:function(){var e=this;this.repository.get(this.$route.params.id,Shopware.Context.api).then((function(t){e.tag=t}))},onClickSave:function(){var e=this;this.isLoading=!0,this.repository.save(this.tag,Shopware.Context.api).then((function(){e.getTag(),e.isLoading=!1,e.processSuccess=!0})).catch((function(t){e.isLoading=!1,e.createNotificationError({title:e.$t("cogi-tags.detail.errorTitle"),message:t})}))},saveFinish:function(){this.processSuccess=!1}}});var p=a("mIvQ"),b=a("X8FO"),f=a("fvNW"),h=a("q2vQ"),T=a("YAXv"),x=a("wLn/");Shopware.Module.register("cogi-tags",{type:"plugin",name:"Tag",title:"cogi-tags.general.mainMenuItemGeneral",description:"cogi-tags.general.descriptionTextModule",color:"#f5be00",icon:"default-action-tags",favicon:"icon-module-settings.png",snippets:{"de-DE":p,"en-GB":b,"es-ES":f,"it-IT":h,"nl-NL":T,"fr-FR":x},routes:{list:{component:"cogi-tags-list",path:"list"},detail:{component:"cogi-tags-detail",path:"detail/:id",meta:{parentPath:"cogi.tags.list"}}},navigation:[{label:"cogi-tags.general.mainMenuItemGeneral",color:"#f5be00",path:"cogi.tags.list",icon:"default-action-tags",parent:"sw-content"}]})},BxKO:function(e,t){e.exports='{% block cogi_tags_list %}\r\n    <sw-page class="cogi-tags-list">\r\n        {% block cogi_tags_list_smart_bar_actions %}\r\n        <template slot="smart-bar-actions">\r\n            <sw-button variant="primary" @click="onShowTagAddModal()">\r\n                {{ $tc(\'cogi-tags.list.addButtonText\') }}\r\n            </sw-button>\r\n        </template>\r\n        {% endblock %}\r\n\r\n        {% block cogi_tags_list_sidebar %}\r\n        <sw-sidebar slot="sidebar">\r\n            <sw-sidebar-item icon="default-arrow-360-left"\r\n                             :title="$t(\'cogi-tags.list.refreshButtonText\')"\r\n                             @click="getList"></sw-sidebar-item>\r\n            </sw-sidebar-item>\r\n            <sw-sidebar-item icon="default-action-circle-download"\r\n                             :title="$t(\'cogi-tags.list.exportCSVButtonText\')"\r\n                             @click="onExportToCSV"></sw-sidebar-item>\r\n            </sw-sidebar-item>\r\n        </sw-sidebar>\r\n        {% endblock %}\r\n\r\n        <template slot="content">\r\n            {% block cogi_tags_list_content %}\r\n                <sw-entity-listing\r\n                    v-if="tags"\r\n                    :items="tags"\r\n                    :repository="tagRepository"\r\n                    :showSelection="false"\r\n                    :columns="columns"\r\n                    detailRoute="cogi.tags.detail">\r\n                        <template #column-createdAt="{item}">\r\n                            <span>{{ item.createdAt | date({hour: \'2-digit\', minute: \'2-digit\', second: \'2-digit\'}) }}</span>\r\n                        </template>\r\n\r\n                        {% block cogi_tags_list_actions %}\r\n                        <template #actions="{ item }">\r\n                            {% block cogi_tags_list_actions_edit %}\r\n                            <sw-context-menu-item\r\n                                :routerLink="{ name: \'cogi.tags.detail\', params: { id: item.id } }">\r\n                                {{ $tc(\'cogi-tags.list.contextMenuEdit\') }}\r\n                            </sw-context-menu-item>\r\n                            {% endblock %}\r\n\r\n                            {% block cogi_tags_list_actions_delete %}\r\n                            <sw-context-menu-item variant="danger"\r\n                                                  @click="onStartTagDelete(item)">\r\n                                {{ $tc(\'cogi-tags.list.contextMenuDelete\') }}\r\n                            </sw-context-menu-item>\r\n                            {% endblock %}\r\n                        </template>\r\n                        {% endblock %}\r\n\r\n                        {% block cogi_tags_list_actions_modals %}\r\n                        <template #action-modals="{ item }">\r\n                            {% block cogi_tags_list_modal_delete %}\r\n                            <sw-modal v-if="showTagDeleteModal"\r\n                                      @modal-close="onCancelTagDelete"\r\n                                      variant="small"\r\n                                      :title="$tc(\'cogi-tags.modal.confirmTitle\')"\r\n                                      class="cogi-tags-list-modal">\r\n                                {% block cogi_tags_list_modal_delete_text %}\r\n                                <p>\r\n                                    {{ $tc(\'cogi-tags.modal.confirmText\') }}\r\n                                </p>\r\n                                {% endblock %}\r\n\r\n                                {% block cogi_tags_list_modal_delete_footer %}\r\n                                <template slot="modal-footer">\r\n                                    {% block cogi_tags_list_modal_delete_action_cancel %}\r\n                                    <sw-button @click="onCancelTagDelete" size="small">\r\n                                        {{ $tc(\'cogi-tags.modal.buttonCancel\') }}\r\n                                    </sw-button>\r\n                                    {% endblock %}\r\n\r\n                                    {% block cogi_tags_list_modal_delete_action_delete %}\r\n                                    <sw-button @click="onConfirmTagDelete" size="small" variant="danger"\r\n                                               class="cogi-tags-list-delete-button">\r\n                                        {{ $tc(\'cogi-tags.modal.buttonDelete\') }}\r\n                                    </sw-button>\r\n                                    {% endblock %}\r\n                                </template>\r\n                                {% endblock %}\r\n                            </sw-modal>\r\n                            {% endblock %}\r\n                        </template>\r\n                        {% endblock %}\r\n                </sw-entity-listing>\r\n            {% endblock %}\r\n\r\n            {% block cogi_tags_list_add_modal %}\r\n                <sw-modal v-if="showTagAddModal"\r\n                          @modal-close="onCloseTagAddModal"\r\n                          :title="$t(\'cogi-tags.list.addButtonText\')"\r\n                          variant="default">\r\n\r\n                    <sw-field v-model="newTag"\r\n                              :label="$tc(\'cogi-tags.detail.nameLabel\')"\r\n                              :placeholder="$tc(\'cogi-tags.detail.nameLabel\')"\r\n                              type="text">\r\n                    </sw-field>\r\n\r\n                    <template #modal-footer>\r\n                        <sw-button @click="onCloseTagAddModal" size="small">\r\n                            {{ $tc(\'cogi-tags.modal.buttonCancel\') }}\r\n                        </sw-button>\r\n                        <sw-button @click="onSaveNewTag"\r\n                                   variant="primary"\r\n                                   :disabled="newTag < 1"\r\n                                   size="small">\r\n                            {{ $tc(\'cogi-tags.detail.saveButtonText\') }}\r\n                        </sw-button>\r\n                    </template>\r\n                </sw-modal>\r\n            {% endblock %}\r\n        </template>\r\n    </sw-page>\r\n{% endblock %}\r\n'},X8FO:function(e){e.exports=JSON.parse('{"cogi-tags":{"general":{"mainMenuItemGeneral":"Tags","descriptionTextModule":"Edit tags"},"list":{"addButtonText":"Add tag","id":"ID","labelName":"Name","labelCreatedAt":"Created at","contextMenuEdit":"Edit","contextMenuDelete":"Delete","messageAddedSuccess":"Tag has been added.","messageDeleteSuccess":"Tag has been deleted.","messageAlreadyExistsError":"A tag with this name already exists.","messageDeleteError":"The tag is still linked to elements.","refreshButtonText":"Refresh","exportCSVButtonText":"Export to CSV"},"modal":{"confirmTitle":"Delete tag","confirmText":"Do you really want to delete this tag?","buttonCancel":"Cancel","buttonDelete":"Delete"},"detail":{"nameLabel":"Name","cancelButtonText":"Cancel","saveButtonText":"Save","errorTitle":"Error saving the tag"}}}')},YAXv:function(e){e.exports=JSON.parse('{"cogi-tags":{"general":{"mainMenuItemGeneral":"Tags","descriptionTextModule":"Tags bewerken"},"list":{"addButtonText":"Tag toevoegen","id":"ID","labelName":"Naam","labelCreatedAt":"Aanmaakdatum","contextMenuEdit":"Bewerken","contextMenuDelete":"Delete","messageAddedSuccess":"De tag is succesvol toegevoegd.","messageDeleteSuccess":"De tag is succesvol verwijderd.","messageAlreadyExistsError":"Er bestaat al een tag met deze naam.","messageDeleteError":"De tag is nog steeds gekoppeld aan elementen.","refreshButtonText":"Update","exportCSVButtonText":"Exporteren als CSV"},"modal":{"confirmTitle":"Verwijder tag","confirmText":"Wil je deze tag echt verwijderen?","buttonCancel":"Annuleren","buttonDelete":"Delete"},"detail":{"nameLabel":"Naam","cancelButtonText":"Annuleren","saveButtonText":"Save","errorTitle":"Fout bij het opslaan van de tag"}}}')},fvNW:function(e){e.exports=JSON.parse('{"cogi-tags":{"general":{"mainMenuItemGeneral":"Etiquetas","descriptionTextModule":"Editar etiquetas"},"list":{"addButtonText":"Añadir etiqueta","id":"ID","labelName":"Nombre","labelCreatedAt":"Fecha de creación","contextMenuEdit":"Editar","contextMenuDelete":"Borrar","messageAddedSuccess":"La etiqueta se ha añadido correctamente.","messageDeleteSuccess":"La etiqueta se ha eliminado con éxito.","messageAlreadyExistsError":"La etiqueta se ha eliminado con éxito.","messageDeleteError":"La etiqueta sigue vinculada a los elementos.","refreshButtonText":"Actualización","exportCSVButtonText":"Exportar como CSV"},"modal":{"confirmTitle":"Eliminar la etiqueta","confirmText":"¿Realmente quieres borrar esta etiqueta?","buttonCancel":"Cancelar","buttonDelete":"Borrar"},"detail":{"nameLabel":"Nombre","cancelButtonText":"Cancelar","saveButtonText":"Guardar","errorTitle":"Error al guardar la etiqueta"}}}')},mIvQ:function(e){e.exports=JSON.parse('{"cogi-tags":{"general":{"mainMenuItemGeneral":"Tags","descriptionTextModule":"Tags bearbeiten"},"list":{"addButtonText":"Tag hinzufügen","id":"ID","labelName":"Name","labelCreatedAt":"Erstelldatum","contextMenuEdit":"Bearbeiten","contextMenuDelete":"Löschen","messageAddedSuccess":"Das Tag wurde erfolgreich hinzugefügt.","messageDeleteSuccess":"Das Tag wurde erfolgreich gelöscht.","messageAlreadyExistsError":"Ein Tag mit dieser Bezeichnung existiert bereits.","messageDeleteError":"Das Tag ist noch mit Elementen verknüpft.","refreshButtonText":"Aktualisieren","exportCSVButtonText":"Als CSV exportieren"},"modal":{"confirmTitle":"Tag löschen","confirmText":"Möchten Sie dieses Tag wirklich löschen?","buttonCancel":"Abbrechen","buttonDelete":"Löschen"},"detail":{"nameLabel":"Name","cancelButtonText":"Abbrechen","saveButtonText":"Speichern","errorTitle":"Fehler beim Speichern des Tags"}}}')},q2vQ:function(e){e.exports=JSON.parse('{"cogi-tags":{"general":{"mainMenuItemGeneral":"Tags","descriptionTextModule":"Modifica dei tag"},"list":{"addButtonText":"Aggiungi tag","id":"ID","labelName":"Nome","labelCreatedAt":"Data di creazione","contextMenuEdit":"Modifica","contextMenuDelete":"Cancellare","messageAddedSuccess":"Il tag è stato aggiunto con successo.","messageDeleteSuccess":"Il tag è stato cancellato con successo.","messageAlreadyExistsError":"Un tag con questo nome esiste già.","messageDeleteError":"Il tag è ancora legato agli elementi.","refreshButtonText":"Aggiornamento","exportCSVButtonText":"Esporatazione come CSV"},"modal":{"confirmTitle":"Elimina il tag","confirmText":"Vuoi davvero cancellare questo tag?","buttonCancel":"Cancella","buttonDelete":"Rimuovi"},"detail":{"nameLabel":"Nome","cancelButtonText":"Cancella","saveButtonText":"Salva","errorTitle":"Errore nel salvare il tag"}}}')},"wLn/":function(e){e.exports=JSON.parse('{"cogi-tags":{"general":{"mainMenuItemGeneral":"Balises","descriptionTextModule":"Balises d\'édition"},"list":{"addButtonText":"Ajouter une balise","id":"ID","labelName":"Nom","labelCreatedAt":"Date de création","contextMenuEdit":"Modifier","contextMenuDelete":"Supprimer","messageAddedSuccess":"La balise a été ajoutée avec succès.","messageDeleteSuccess":"La balise a été supprimée avec succès.","messageAlreadyExistsError":"Une balise portant ce nom existe déjà.","messageDeleteError":"La balise est toujours liée aux éléments.","refreshButtonText":"Mise à jour","exportCSVButtonText":"Exportation en CSV"},"modal":{"confirmTitle":"Supprimer le balise","confirmText":"Voulez-vous vraiment supprimer ce balise ?","buttonCancel":"Annuler","buttonDelete":"Supprimer"},"detail":{"nameLabel":"Nom","cancelButtonText":"Annuler","saveButtonText":"Sauvez","errorTitle":"Erreur de sauvegarde de la balise"}}}')}});
//# sourceMappingURL=cogi-tags.js.map